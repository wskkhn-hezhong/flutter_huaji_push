<manifest xmlns:android="http://schemas.android.com/apk/res/android"
  package="com.huajiwang.flutter_huaji_push">

    <permission
        android:name="${applicationId}.permission.XGPUSH_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.permission.XGPUSH_RECEIVE" />
    <!-- 【必须】 腾讯移动推送 SDK 所需权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- 【常用】 腾讯移动推送SDK所需权限 -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <!-- 注：小米push 需要的权限 begin -->
    <!--    <permission-->
    <!--        android:name="${applicationId}.permission.MIPUSH_RECEIVE"-->
    <!--        android:protectionLevel="signature" />-->
    <!-- 这里com.example.mipushtest改成app的包名 -->
    <!--    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />-->


    <!-- 注：魅族push 需要的权限 begin -->
    <!-- 兼容flyme5.0以下版本，魅族内部集成pushSDK必填，不然无法收到消息-->
    <!--    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE"></uses-permission>-->
    <!--    <permission-->
    <!--        android:name="${applicationId}.push.permission.MESSAGE"-->
    <!--        android:protectionLevel="signature" />-->
    <!--    <uses-permission android:name="${applicationId}.push.permission.MESSAGE"></uses-permission>-->
    <!--  兼容flyme3.0配置权限-->
    <!--    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />-->
    <!--    <permission-->
    <!--        android:name="${applicationId}.permission.C2D_MESSAGE"-->
    <!--        android:protectionLevel="signature"></permission>-->
    <!--    <uses-permission android:name="${applicationId}.permission.C2D_MESSAGE" />-->

    <!--OPPO 推送服务必须权限-->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" />

    <application>
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />
        <!-- 【必须】 腾讯移动推送默认通知 -->
        <activity android:name="com.tencent.android.tpush.XGPushActivity">
            <intent-filter>
                <action android:name="android.intent.action" />
            </intent-filter>
        </activity>
        <!-- 【必须】 腾讯移动推送receiver广播接收 -->
        <receiver
            android:name="com.tencent.android.tpush.XGPushReceiver"
            android:process=":xg_vip_service">
            <intent-filter android:priority="0x7fffffff">
                <!-- 【必须】 腾讯移动推送SDK的内部广播 -->
                <action android:name="com.tencent.android.xg.vip.action.SDK" />
                <action android:name="com.tencent.android.xg.vip.action.INTERNAL_PUSH_MESSAGE" />
                <action android:name="com.tencent.android.xg.vip.action.ACTION_SDK_KEEPALIVE" />
                <!-- 【可选】 系统广播：网络切换 -->
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <!-- 【可选】 系统广播：开屏 -->
                <action android:name="android.intent.action.USER_PRESENT" />
                <!-- 【可选】 一些常用的系统广播，增强腾讯移动推送service的复活机会，请根据需要选择。当然，您也可以添加App自定义的一些广播让启动service -->
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <!-- 【必须】 腾讯移动推送service -->
        <service
            android:name="com.tencent.android.tpush.service.XGVipPushService"
            android:persistent="true"
            android:process=":xg_vip_service"></service>
        <!-- 【必须】 通知service，其中android:name部分要改为当前包名 -->
        <service android:name="com.tencent.android.tpush.rpc.XGRemoteService">
            <intent-filter>
                <!-- 【必须】 请修改为当前APP名包.XGVIP_PUSH_ACTION -->
                <action android:name="${applicationId}.XGVIP_PUSH_ACTION" />
            </intent-filter>
        </service>
        <!-- 【必须】 【注意】authorities修改为 包名.XGVIP_PUSH_AUTH -->
        <provider
            android:name="com.tencent.android.tpush.XGPushProvider"
            android:authorities="${applicationId}.XGVIP_PUSH_AUTH" />
        <!-- 【必须】 【注意】authorities修改为 包名.TPUSH_PROVIDER -->
        <provider
            android:name="com.tencent.android.tpush.SettingsContentProvider"
            android:authorities="${applicationId}.TPUSH_PROVIDER" />
        <!-- 【可选】用于增强保活能力 -->
        <provider
            android:name="com.tencent.android.tpush.XGVipPushKAProvider"
            android:authorities="${applicationId}.AUTH_XGPUSH_KEEPALIVE"
            android:exported="true" />
        <!-- 【可选】APP实现的Receiver，用于接收消息透传和操作结果的回调，请根据需要添加 -->
        <!-- YOUR_PACKAGE_PATH.CustomPushReceiver需要改为自己的Receiver： -->
        <receiver android:name="com.huajiwang.flutter_huaji_push.XGMessageReceiver">
            <intent-filter>
                <!-- 接收消息透传 -->
                <action android:name="com.tencent.android.xg.vip.action.PUSH_MESSAGE" />
                <!-- 监听注册、反注册、设置/删除标签、通知被点击等处理结果 -->
                <action android:name="com.tencent.android.xg.vip.action.FEEDBACK" />
            </intent-filter>
        </receiver>
        <!-- 【必须】 请修改为APP的AccessId，“21”开头的10位数字，中间没空格 -->
        <meta-data
            android:name="XG_V2_ACCESS_ID"
            android:value="${XG_ACCESS_ID}" />
        <!-- 【必须】 请修改为APP的AccessKey，“A”开头的12位字符串，中间没空格 -->
        <meta-data
            android:name="XG_V2_ACCESS_KEY"
            android:value="${XG_ACCESS_KEY}" />
    </application>
</manifest>
